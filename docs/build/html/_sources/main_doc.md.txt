# Orquestación de `main_borrar.py`

Este módulo actúa como **orquestador** del proyecto: coordina el scraping por medio y la carga en Snowflake sin ejecutar código desde la documentación.

## Módulos y dependencias

- **`config.py`**
  - `NOTICIEROS`: lista de medios (URL, fuente, idioma, tabla destino)
  - `SNOWFLAKE_CONFIG`: credenciales y parámetros de conexión
  - `RETRIES`, `SLEEP_BETWEEN_DIAS`: reintentos y pausas
- **`scraper.py`**
  - `obtener_snapshot_url_directo(url, fecha)`
  - `extraer_titulares(url, fecha, fuente)`
  - `log_error(msg)`
- **`snowflake_utils.py`**
  - `obtener_ultima_fecha_en_snowflake(config, tabla)`
  - `subir_a_snowflake(df, config, tabla)`

## Flujo general

1. Para cada noticiero en `config.py`, se obtiene la última fecha almacenada.  
2. Se recorren los días pendientes hasta el día anterior al actual.  
3. Para cada fecha: se resuelve el snapshot, se extraen titulares y se enriquecen con metadatos.  
4. Se suben los nuevos registros a Snowflake.

## Preparación del procesamiento por medio

Recorremos `NOTICIEROS`, extraemos metadatos del medio y fijamos el rango de fechas (desde la última cargada hasta ayer).

```{literalinclude} ../../main_borrar.py
:language: python
:linenos:
:start-after: --8<-- [start:configfechas-noticieros]
:end-before: --8<-- [end:configfechas-noticieros]
```

## Extracción de titulares

Bucle diario: resolvemos el snapshot del día, extraemos titulares y los enriquecemos con metadatos; errores se registran sin detener el flujo.

```{literalinclude} ../../main_borrar.py
:language: python
:linenos:
:start-after: --8<-- [start:extraer-titulares]
:end-before: --8<-- [end:extraer-titulares]
```

## Carga en Snowflake

Consolidamos resultados, eliminamos duplicados y subimos a la tabla destino.

```{literalinclude} ../../main_borrar.py
:language: python
:linenos:
:start-after: --8<-- [start:subida-snowflake]
:end-before: --8<-- [end:subida-snowflake]
```


# sdfksfsd
## sdfvsdf